-- Drop table

-- DROP TABLE OFEXTCOMPONENTCONF;
DROP TABLE IF EXISTS OFEXTCOMPONENTCONF;
CREATE TABLE OFEXTCOMPONENTCONF (
	SUBDOMAIN varchar(255) NOT NULL,
	WILDCARD int NOT NULL,
	SECRET varchar(255),
	PERMISSION varchar(10) NOT NULL,
	PRIMARY KEY (SUBDOMAIN)
);

-- Drop table

-- DROP TABLE OFGROUP;
DROP TABLE IF EXISTS OFGROUP;
CREATE TABLE OFGROUP (
	GROUPNAME varchar(50) NOT NULL,
	DESCRIPTION varchar(255),
	PRIMARY KEY (GROUPNAME)
);

-- Drop table

-- DROP TABLE OFGROUPPROP;
DROP TABLE IF EXISTS OFGROUPPROP;
CREATE TABLE OFGROUPPROP (
	GROUPNAME varchar(50) NOT NULL,
	`name` varchar(100) NOT NULL,
	PROPVALUE varchar(4000) NOT NULL,
	PRIMARY KEY (GROUPNAME,`name`)
);

-- Drop table

-- DROP TABLE OFGROUPUSER;
DROP TABLE IF EXISTS OFGROUPUSER;
CREATE TABLE OFGROUPUSER (
	GROUPNAME varchar(50) NOT NULL,
	USERNAME varchar(100) NOT NULL,
	ADMINISTRATOR int NOT NULL,
	PRIMARY KEY (GROUPNAME,USERNAME,ADMINISTRATOR)
);

-- Drop table

-- DROP TABLE OFID;
DROP TABLE IF EXISTS OFID;
CREATE TABLE OFID (
	IDTYPE int NOT NULL,
	ID int NOT NULL,
	PRIMARY KEY (IDTYPE)
);

-- Drop table

-- DROP TABLE OFMUCAFFILIATION;
DROP TABLE IF EXISTS OFMUCAFFILIATION;
CREATE TABLE OFMUCAFFILIATION (
	ROOMID int NOT NULL,
	JID varchar(1024) NOT NULL,
	AFFILIATION int NOT NULL,
	NICKNAME varchar(255),
	PRIMARY KEY (ROOMID,JID(70))
);

-- Drop table

-- DROP TABLE OFMUCCONVERSATIONLOG;
DROP TABLE IF EXISTS OFMUCCONVERSATIONLOG;
CREATE TABLE OFMUCCONVERSATIONLOG (
	ROOMID int NOT NULL,
	MESSAGEID int NOT NULL,
	SENDER varchar(1024) NOT NULL,
	NICKNAME varchar(255),
	LOGTIME char(15) NOT NULL,
	SUBJECT varchar(255),
	BODY varchar(4000),
	STANZA varchar(4000),
	INDEX OFMUCCONVERSATIONLOG_MSG_ID (MESSAGEID),
	INDEX OFMUCCONVERSATIONLOG_TIME_IDX (LOGTIME)
); 

-- Drop table

-- DROP TABLE OFMUCMEMBER;
DROP TABLE IF EXISTS OFMUCMEMBER;
CREATE TABLE OFMUCMEMBER (
	ROOMID int NOT NULL,
	JID varchar(1024) NOT NULL,
	NICKNAME varchar(255),
	FIRSTNAME varchar(100),
	LASTNAME varchar(100),
	URL varchar(100),
	EMAIL varchar(100),
	FAQENTRY varchar(100),
	PRIMARY KEY (ROOMID,JID(70))
);

-- Drop table

-- DROP TABLE OFMUCROOM;
DROP TABLE IF EXISTS OFMUCROOM;
CREATE TABLE OFMUCROOM (
	SERVICEID int NOT NULL,
	ROOMID int NOT NULL,
	CREATIONDATE char(15) NOT NULL,
	MODIFICATIONDATE char(15) NOT NULL,
	`name` varchar(50) NOT NULL,
	NATURALNAME varchar(255) NOT NULL,
	DESCRIPTION varchar(255),
	LOCKEDDATE char(15) NOT NULL,
	EMPTYDATE char(15),
	CANCHANGESUBJECT int NOT NULL,
	MAXUSERS int NOT NULL,
	PUBLICROOM int NOT NULL,
	MODERATED int NOT NULL,
	MEMBERSONLY int NOT NULL,
	CANINVITE int NOT NULL,
	ROOMPASSWORD varchar(50),
	CANDISCOVERJID int NOT NULL,
	LOGENABLED int NOT NULL,
	SUBJECT varchar(100),
	ROLESTOBROADCAST int NOT NULL,
	USERESERVEDNICK int NOT NULL,
	CANCHANGENICK int NOT NULL,
	CANREGISTER int NOT NULL,
	ALLOWPM int,
	PRIMARY KEY (SERVICEID,`name`),
	INDEX OFMUCROOM_ROOMID_IDX (ROOMID),
	INDEX OFMUCROOM_SERVICEID_IDX (SERVICEID)
);

-- Drop table

-- DROP TABLE OFMUCROOMPROP;
DROP TABLE IF EXISTS OFMUCROOMPROP;
CREATE TABLE OFMUCROOMPROP (
	ROOMID int NOT NULL,
	`name` varchar(100) NOT NULL,
	PROPVALUE varchar(1024) NOT NULL,
	PRIMARY KEY (ROOMID,`name`)
);

-- Drop table

-- DROP TABLE OFMUCSERVICE;
DROP TABLE IF EXISTS OFMUCSERVICE;
CREATE TABLE OFMUCSERVICE (
	SERVICEID int NOT NULL,
	SUBDOMAIN varchar(255) NOT NULL,
	DESCRIPTION varchar(255),
	ISHIDDEN int NOT NULL,
	PRIMARY KEY (SUBDOMAIN),
	INDEX OFMUCSERVICE_SERVICEID_IDX (SERVICEID)
);

-- Drop table

-- DROP TABLE OFMUCSERVICEPROP;
DROP TABLE IF EXISTS OFMUCSERVICEPROP;
CREATE TABLE OFMUCSERVICEPROP (
	SERVICEID int NOT NULL,
	`name` varchar(100) NOT NULL,
	PROPVALUE varchar(1024) NOT NULL,
	PRIMARY KEY (SERVICEID,`name`)
);

-- Drop table

-- DROP TABLE OFOFFLINE;
DROP TABLE IF EXISTS OFOFFLINE;
CREATE TABLE OFOFFLINE (
	USERNAME varchar(64) NOT NULL,
	MESSAGEID int NOT NULL,
	CREATIONDATE char(15) NOT NULL,
	MESSAGESIZE int NOT NULL,
	STANZA text NOT NULL,
	PRIMARY KEY (USERNAME,MESSAGEID)
);

-- Drop table

-- DROP TABLE OFPRESENCE;
DROP TABLE IF EXISTS OFPRESENCE;
CREATE TABLE OFPRESENCE (
	USERNAME varchar(64) NOT NULL,
	OFFLINEPRESENCE text,
	OFFLINEDATE char(15) NOT NULL,
	PRIMARY KEY (USERNAME)
);

-- Drop table

-- DROP TABLE OFPRIVACYLIST;
DROP TABLE IF EXISTS OFPRIVACYLIST;
CREATE TABLE OFPRIVACYLIST (
	USERNAME varchar(64) NOT NULL,
	`name` varchar(100) NOT NULL,
	ISDEFAULT int NOT NULL,
	LIST text NOT NULL,
	PRIMARY KEY (USERNAME,`name`),
	INDEX OFPRIVACYLIST_DEFAULT_IDX (USERNAME,ISDEFAULT)
);

-- Drop table

-- DROP TABLE OFPROPERTY;
DROP TABLE IF EXISTS OFPROPERTY;
CREATE TABLE OFPROPERTY (
	`NAME` varchar(100) NOT NULL,
	`PROPVALUE` varchar(4000) NOT NULL,
	`ENCRYPTED` int DEFAULT NULL,
	IV char(24),
	PRIMARY KEY (`NAME`)
);

-- Drop table

-- DROP TABLE OFPUBSUBAFFILIATION;
DROP TABLE IF EXISTS OFPUBSUBAFFILIATION;
CREATE TABLE OFPUBSUBAFFILIATION (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	JID varchar(1024) NOT NULL,
	AFFILIATION varchar(10) NOT NULL,
	PRIMARY KEY (SERVICEID,NODEID,JID(70))
);

-- Drop table

-- DROP TABLE OFPUBSUBDEFAULTCONF;
DROP TABLE IF EXISTS OFPUBSUBDEFAULTCONF;
CREATE TABLE OFPUBSUBDEFAULTCONF (
	SERVICEID varchar(100) NOT NULL,
	LEAF int NOT NULL,
	DELIVERPAYLOADS int NOT NULL,
	MAXPAYLOADSIZE int NOT NULL,
	PERSISTITEMS int NOT NULL,
	MAXITEMS int NOT NULL,
	NOTIFYCONFIGCHANGES int NOT NULL,
	NOTIFYDELETE int NOT NULL,
	NOTIFYRETRACT int NOT NULL,
	PRESENCEBASED int NOT NULL,
	SENDITEMSUBSCRIBE int NOT NULL,
	PUBLISHERMODEL varchar(15) NOT NULL,
	SUBSCRIPTIONENABLED int NOT NULL,
	ACCESSMODEL varchar(10) NOT NULL,
	`LANGUAGE` varchar(255),
	REPLYPOLICY varchar(15),
	ASSOCIATIONPOLICY varchar(15) NOT NULL,
	MAXLEAFNODES int NOT NULL,
	PRIMARY KEY (SERVICEID,LEAF)
);

-- Drop table

-- DROP TABLE OFPUBSUBITEM;
DROP TABLE IF EXISTS OFPUBSUBITEM;
CREATE TABLE OFPUBSUBITEM (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	ID varchar(100) NOT NULL,
	JID varchar(1024) NOT NULL,
	CREATIONDATE char(15) NOT NULL,
	PAYLOAD varchar(4000),
	PRIMARY KEY (SERVICEID,NODEID,ID)
);

-- Drop table

-- DROP TABLE OFPUBSUBNODE;
DROP TABLE IF EXISTS OFPUBSUBNODE;
CREATE TABLE OFPUBSUBNODE (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	LEAF int NOT NULL,
	CREATIONDATE char(15) NOT NULL,
	MODIFICATIONDATE char(15) NOT NULL,
	PARENT varchar(100),
	DELIVERPAYLOADS int NOT NULL,
	MAXPAYLOADSIZE int,
	PERSISTITEMS int,
	MAXITEMS int,
	NOTIFYCONFIGCHANGES int NOT NULL,
	NOTIFYDELETE int NOT NULL,
	NOTIFYRETRACT int NOT NULL,
	PRESENCEBASED int NOT NULL,
	SENDITEMSUBSCRIBE int NOT NULL,
	PUBLISHERMODEL varchar(15) NOT NULL,
	SUBSCRIPTIONENABLED int NOT NULL,
	CONFIGSUBSCRIPTION int NOT NULL,
	ACCESSMODEL varchar(10) NOT NULL,
	PAYLOADTYPE varchar(100),
	BODYXSLT varchar(100),
	DATAFORMXSLT varchar(100),
	CREATOR varchar(1024) NOT NULL,
	DESCRIPTION varchar(255),
	`LANGUAGE` varchar(255),
	NAME varchar(50),
	REPLYPOLICY varchar(15),
	ASSOCIATIONPOLICY varchar(15),
	MAXLEAFNODES int,
	PRIMARY KEY (SERVICEID,NODEID)
);

-- Drop table

DROP TABLE IF EXISTS OFPUBSUBNODEGROUPS;
CREATE TABLE OFPUBSUBNODEGROUPS (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	ROSTERGROUP varchar(100) NOT NULL,
	INDEX OFPUBSUBNODEGROUPS_IDX (SERVICEID,NODEID)
);

-- Drop table

DROP TABLE IF EXISTS OFPUBSUBNODEJIDS;
CREATE TABLE OFPUBSUBNODEJIDS (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	JID varchar(1024) NOT NULL,
	ASSOCIATIONTYPE varchar(20) NOT NULL,
	PRIMARY KEY (SERVICEID,NODEID,JID(70))
);

-- Drop table

DROP TABLE IF EXISTS OFPUBSUBSUBSCRIPTION;
CREATE TABLE OFPUBSUBSUBSCRIPTION (
	SERVICEID varchar(100) NOT NULL,
	NODEID varchar(100) NOT NULL,
	ID varchar(100) NOT NULL,
	JID varchar(1024) NOT NULL,
	`OWNER` varchar(1024) NOT NULL,
	STATE varchar(15) NOT NULL,
	DELIVER int NOT NULL,
	DIGEST int NOT NULL,
	DIGEST_FREQUENCY int NOT NULL,
	EXPIRE char(15),
	INCLUDEBODY int NOT NULL,
	SHOWVALUES varchar(30) NOT NULL,
	SUBSCRIPTIONTYPE varchar(10) NOT NULL,
	SUBSCRIPTIONDEPTH int NOT NULL,
	KEYWORD varchar(200),
	PRIMARY KEY (SERVICEID,NODEID,ID)
);

-- Drop table

DROP TABLE IF EXISTS OFREMOTESERVERCONF;
CREATE TABLE OFREMOTESERVERCONF (
	XMPPDOMAIN varchar(255) NOT NULL,
	REMOTEPORT int,
	PERMISSION varchar(10) NOT NULL,
	PRIMARY KEY (XMPPDOMAIN)
);

-- Drop table

DROP TABLE IF EXISTS OFROSTER;
CREATE TABLE OFROSTER (
	ROSTERID int NOT NULL,
	USERNAME varchar(64) NOT NULL,
	JID varchar(1024) NOT NULL,
	SUB int NOT NULL,
	ASK int NOT NULL,
	RECV int NOT NULL,
	NICK varchar(255),
	PRIMARY KEY (ROSTERID),
	INDEX OFROSTER_JID_IDX (JID(70)),
	INDEX OFROSTER_USERNAME_IDX (USERNAME)
);

-- Drop table

DROP TABLE IF EXISTS OFROSTERGROUPS;
CREATE TABLE OFROSTERGROUPS (
	ROSTERID int NOT NULL,
	`RANK` int NOT NULL,
	GROUPNAME varchar(255) NOT NULL,
	PRIMARY KEY (ROSTERID,`RANK`),
	KEY `ofRosterGroup_rosterid_idx` (`rosterID`)
);

-- Drop table

DROP TABLE IF EXISTS OFSASLAUTHORIZED;
CREATE TABLE OFSASLAUTHORIZED (
	USERNAME varchar(64) NOT NULL,
	PRINCIPAL varchar(4000) NOT NULL,
	PRIMARY KEY (USERNAME,PRINCIPAL(200))
);

-- Drop table

DROP TABLE IF EXISTS OFSECURITYAUDITLOG;
CREATE TABLE OFSECURITYAUDITLOG (
	MSGID int NOT NULL,
	USERNAME varchar(64) NOT NULL,
	ENTRYSTAMP int NOT NULL,
	SUMMARY varchar(255) NOT NULL,
	NODE varchar(255) NOT NULL,
	DETAILS varchar(4000),
	PRIMARY KEY (MSGID),
	INDEX OFSECURITYAUDITLOG_TSTAMP_IDX (ENTRYSTAMP),
	INDEX OFSECURITYAUDITLOG_UNAME_IDX (USERNAME)
);

-- Drop table

DROP TABLE IF EXISTS OFUSER;
CREATE TABLE OFUSER (
	USERNAME varchar(64) NOT NULL,
	STOREDKEY varchar(32) DEFAULT NULL,
	SERVERKEY varchar(32) DEFAULT NULL,
	SALT varchar(32) DEFAULT NULL,
	ITERATIONS int,
	PLAINPASSWORD varchar(64) DEFAULT NULL,
	ENCRYPTEDPASSWORD varchar(255) DEFAULT NULL,
	NAME varchar(100) DEFAULT NULL,
	EMAIL varchar(100) DEFAULT NULL,
	CREATIONDATE varchar(15) NOT NULL,
	MODIFICATIONDATE varchar(15) NOT NULL,
	ID bigint NOT NULL,
	GROUP_CODE varchar(256) DEFAULT NULL,
	`IDENTITY` varchar(64) DEFAULT NULL,
	SEX varchar(4) DEFAULT NULL,
	STATUS varchar(8) DEFAULT NULL,
	TELEPHONE varchar(32) DEFAULT NULL,
	USER_CARD varchar(18) DEFAULT NULL,
	GROUP_ROOT_CODE varchar(100),
	PRIMARY KEY (ID),
	KEY OFUSER_CDATE_IDX (CREATIONDATE),
	INDEX UKBT1F0072O9H9A62989H06PV8Q (USERNAME)
);

-- Drop table

DROP TABLE IF EXISTS OFUSERFLAG;
CREATE TABLE OFUSERFLAG (
	USERNAME varchar(64) NOT NULL,
	`NAME` varchar(100) NOT NULL,
	STARTTIME char(15),
	ENDTIME char(15),
	PRIMARY KEY (USERNAME,`NAME`),
	INDEX OFUSERFLAG_ETIME_IDX (ENDTIME),
	INDEX OFUSERFLAG_STIME_IDX (STARTTIME)
);

-- Drop table

DROP TABLE IF EXISTS OFUSERPROP;
CREATE TABLE OFUSERPROP (
	USERNAME varchar(64) NOT NULL,
	`NAME` varchar(100) NOT NULL,
	PROPVALUE varchar(1024) NOT NULL,
	PRIMARY KEY (USERNAME,`NAME`)
);

-- Drop table

DROP TABLE IF EXISTS OFUSER_LOG;
CREATE TABLE OFUSER_LOG (
	ID bigint NOT NULL,
	GROUP_CODE varchar(255),
	GROUP_NAME varchar(128),
	IP_ADDRESS varchar(255),
	MAC_ADDRESS varchar(255),
	OPERATION varchar(255),
	STATUS varchar(64),
	TERMINAL varchar(128),
	CREATE_TIME timestamp,
	USER_ID bigint,
	USERNAME varchar(128),
	group_root_code varchar(255),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS OFVCARD;
CREATE TABLE OFVCARD (
	USERNAME varchar(64) NOT NULL,
	VCARD mediumtext NOT NULL,
	PRIMARY KEY (USERNAME)
);

-- Drop table

DROP TABLE IF EXISTS OFVERSION;
CREATE TABLE OFVERSION (
	`NAME` varchar(50) NOT NULL,
	`VERSION` int NOT NULL,
	PRIMARY KEY (`NAME`)
);

-- Drop table

DROP TABLE IF EXISTS OF_MESSAGE_HISTORY;
CREATE TABLE OF_MESSAGE_HISTORY (
	ID bigint NOT NULL,
	MESSAGE mediumtext,
	RECEIVER varchar(128),
	SENDER varchar(128),
	CREATED_TIME timestamp,
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_ADMIN;
CREATE TABLE UM_ADMIN (
	ID bigint NOT NULL,
--	CREATED_AT timestamp not null DEFAULT CURRENT_TIMESTAMP,  -- v5.7 以上支持
	CREATED_AT datetime,
	ENCRYPTEDPASSWORD varchar(255),
	GROUP_CODE varchar(255),
	GROUP_NAME varchar(128),
	NICKNAME varchar(256),
	PLAINPASSWORD varchar(64),
	SALT varchar(64),
	TELEPHONE varchar(255),
--	UPDATE_TIME timestamp not null DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- v5.7 以上支持
	UPDATE_TIME datetime,
	USERNAME varchar(256),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_AUTHORITY;
CREATE TABLE UM_AUTHORITY (
	ID bigint NOT NULL,
	CODE varchar(32),
	`NAME` varchar(32),
	OPERATION_CODE varchar(255),
	RESOURCE_CODE varchar(128),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_AUTHORITY_ROLE;
CREATE TABLE UM_AUTHORITY_ROLE (
	ID bigint NOT NULL,
	AUTH_CODE varchar(32),
	ROLE_CODE varchar(32),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_CLIENT_SETTING;
CREATE TABLE UM_CLIENT_SETTING (
	ID bigint NOT NULL,
	SEND_FILE_SIZE int,
	SEND_FILE_SUFFIX varchar(255),
	storage_file_size bigint,
	storage_msg_size bigint,
	kb_msg_number int,
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_CONTACTS;
CREATE TABLE UM_CONTACTS (
	ID bigint NOT NULL,
	ALIAS varchar(32),
	FRIEND_JID varchar(64),
	USER_NAME varchar(64),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_GROUP;
CREATE TABLE UM_GROUP (
	ID bigint NOT NULL,
	ADDRESS varchar(128),
	CODE varchar(255),
	GROUP_NAME varchar(128),
	GSEQUENCE int,
	PARENT_CODE varchar(255),
	SERVICE varchar(128),
	SUPERIOR_CODE varchar(64),
	TELEPHONE varchar(128),
	service_license varchar(64) DEFAULT 'n',
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_GROUP_VISIBLE;
CREATE TABLE UM_GROUP_VISIBLE (
	ID bigint NOT NULL,
	GROUP_CODE varchar(255),
	VISIBLE_CODE varchar(255),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_NOTICE;
CREATE TABLE UM_NOTICE (
	ID bigint NOT NULL,
	CONTENT mediumtext,
	CREATE_TIME timestamp,
	TITLE varchar(256),
	ORGANIZE_CODES mediumtext,
	CODES varchar(255),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_NOTICE_SCOPE;
CREATE TABLE UM_NOTICE_SCOPE (
	ID bigint NOT NULL,
	CODES mediumtext,
	NOTICE_ID bigint,
	`SCOPE` varchar(128),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_OPERATION;
CREATE TABLE UM_OPERATION (
	ID bigint NOT NULL,
	CODE varchar(255),
	`NAME` varchar(255),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_RESOURCE;
CREATE TABLE UM_RESOURCE (
	ID bigint NOT NULL,
	CODE varchar(255),
	`NAME` varchar(255),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_ROLE;
CREATE TABLE UM_ROLE (
	ID bigint NOT NULL,
	CODE varchar(32),
	`NAME` varchar(32),
	PRIMARY KEY (ID),
	INDEX UKN2KW26JI2UF5OOF0HQ2N0SQJ9 (CODE)
); 

-- Drop table

DROP TABLE IF EXISTS UM_ROOM_NOTICE;
CREATE TABLE UM_ROOM_NOTICE (
	ID bigint NOT NULL,
	CONTENT mediumtext,
	CREATE_TIME timestamp,
	ROOM_JID varchar(255),
	TITLE varchar(256),
	USER_NAME varchar(64),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_SYSTEM_ADMIN_LOG;
CREATE TABLE UM_SYSTEM_ADMIN_LOG (
	ID bigint NOT NULL,
	GROUP_CODE varchar(255),
	GROUP_NAME varchar(128),
	NICKNAME varchar(256),
	OPERATION varchar(255),
	CREATED_TIME timestamp,
	USERNAME varchar(256),
	group_root_code varchar(128) DEFAULT NULL,
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_USER_CONFIG;
CREATE TABLE UM_USER_CONFIG (
	ID bigint NOT NULL,
	CHAT_LOG_STORAGE varchar(255),
	USERNAME varchar(128),
	STORAGE_FILE_UP_SIZE double,
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS UM_USER_ROLE;
CREATE TABLE UM_USER_ROLE (
	ID bigint NOT NULL,
	ROLE_CODE varchar(32),
	USER_ID varchar(32),
	PRIMARY KEY (ID)
);

-- Drop table

DROP TABLE IF EXISTS USERSTATUS;
CREATE TABLE USERSTATUS (
	USERNAME varchar(64) NOT NULL,
	RESOURCE varchar(64) NOT NULL,
	ONLINE int NOT NULL,
	PRESENCE char(15),
	LASTIPADDRESS char(15) NOT NULL,
	LASTLOGINDATE char(15) NOT NULL,
	LASTLOGOFFDATE char(15),
	PRIMARY KEY (USERNAME,RESOURCE)
);

-- Drop table

DROP TABLE IF EXISTS USERSTATUSHISTORY;
CREATE TABLE USERSTATUSHISTORY (
	HISTORYID bigint NOT NULL,
	USERNAME varchar(64) NOT NULL,
	RESOURCE varchar(64) NOT NULL,
	LASTIPADDRESS char(15) NOT NULL,
	LASTLOGINDATE char(15) NOT NULL,
	LASTLOGOFFDATE char(15) NOT NULL,
	PRIMARY KEY (HISTORYID)
);

-- Drop table

DROP TABLE IF EXISTS IM_LICENSE;
CREATE TABLE IM_LICENSE (
	ID bigint NOT NULL,
	EXPIRED_DATE varchar(32),
	GROUP_CODE varchar(32),
	GROUP_NAME varchar(32),
	IMPORTED_DATE varchar(32),
	HASH_KEY varchar(64),
	LICENSE_ID varchar(64),
	RELEASE_DATE varchar(32),
	USED boolean NOT NULL,
	USER_COUNT int,
	PRIMARY KEY (ID),
	INDEX UKAOIXV7O5RWWX7RAPHS6L1SEML (LICENSE_ID)
);

DROP TABLE IF EXISTS um_client_version;
create table um_client_version (
	id bigint not null, 
	client_type varchar(255), 
	client_version varchar(255), 
	created_time timestamp, 
	remark varchar(2000),
	soft_network varchar(255), 
	primary key (id)
);

DROP TABLE IF EXISTS syntoim_ofmucoffline;
CREATE TABLE syntoim_ofmucoffline (
  id bigint NOT NULL,
  first bigint(20) DEFAULT NULL,
  last bigint(20) DEFAULT NULL,
  room varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_group_mini_program;
CREATE TABLE um_group_mini_program (
  id bigint NOT NULL,
  group_code varchar(64) DEFAULT NULL,
  program_code varchar(64) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_group_small_program;
CREATE TABLE um_group_small_program (
  id bigint NOT NULL,
  group_code varchar(64) DEFAULT NULL,
  program_code varchar(64) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_mini_program;
CREATE TABLE um_mini_program (
  id bigint NOT NULL,
  code varchar(64) DEFAULT NULL,
  `name` varchar(64) DEFAULT NULL,
  remark varchar(2000) DEFAULT NULL,
  url varchar(512) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_service_no;
CREATE TABLE um_service_no (
  id bigint NOT NULL,
  code varchar(64) DEFAULT NULL,
  group_root_code varchar(64) DEFAULT NULL,
  name varchar(64) DEFAULT NULL,
  remark varchar(2000) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_service_no_article;
CREATE TABLE um_service_no_article (
  id bigint NOT NULL,
  create_date datetime DEFAULT NULL,
  remark varchar(2000) DEFAULT NULL,
  service_code varchar(64) DEFAULT NULL,
  title varchar(256) DEFAULT NULL,
  url varchar(512) DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS um_service_no_user;
CREATE TABLE um_service_no_user (
  id bigint NOT NULL,
  service_code varchar(64) DEFAULT NULL,
  username varchar(64) DEFAULT NULL,
  PRIMARY KEY (id)
);


INSERT INTO ofUser (id, username, plainPassword, `name`, email, creationDate, modificationDate) VALUES (1, 'admin', 'admin', 'Administrator', 'admin@example.com', '0', '0');
INSERT INTO um_admin (id, created_at, encryptedpassword, group_code, group_name, nickname, plainpassword, salt, update_time, username, telephone) VALUES ('1', NULL, 'b78d09a26a2941502a612274da81abd34e4fe7c29cd43100', '-1', NULL, 'Administrator', '7C4A8D09CA3762AF61E59520943DC26494F8941B', 'rIElXcP+c13TyB2IxUzimltQahH+4ACp', '2019-04-08 20:02:15', 'superAdmin', '');

INSERT INTO ofID (idType, id) VALUES (18, 1);
INSERT INTO ofID (idType, id) VALUES (19, 1);
INSERT INTO ofID (idType, id) VALUES (23, 1);
INSERT INTO ofID (idType, id) VALUES (26, 2);
INSERT INTO ofID (idType, id) VALUES (25, 4);

INSERT INTO UM_CLIENT_SETTING (ID,SEND_FILE_SIZE,SEND_FILE_SUFFIX,storage_file_size,storage_msg_size,kb_msg_number) VALUES (157777808322176,50,'ofd,pdf,doc,docx,xls,xlsx,ppt,pptx',800,10,10000);

INSERT INTO ofVersion (`name`, version) VALUES ('openfire', 29);
INSERT INTO ofVersion (`name`, version) VALUES ('user-status', 0);

INSERT INTO ofMucService (serviceID, subdomain, isHidden) VALUES (1, 'conference', 0);

INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'history.type','none');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.canAnyoneDiscoverJID','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.logEnabled','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.maxUsers','0');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.canOccupantsInvite','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.publicRoom','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.canOccupantsChangeSubject','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.persistent','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.loginRestrictedToNickname','false');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.moderated','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.canChangeNickname','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.membersOnly','true');
INSERT INTO OFMUCSERVICEPROP (SERVICEID,`name`,PROPVALUE) VALUES (1,'room.registrationEnabled','true');

INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('admin.authorizedJIDs','admin@cfnmcp.cn',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.securityAudit.className','org.jivesoftware.openfire.security.DefaultSecurityAuditProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('xmpp.socket.ssl.active','true',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.restapi.httpAuth','secret',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.admin.className','org.jivesoftware.openfire.admin.DefaultAdminProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.user.className','org.jivesoftware.openfire.user.DefaultUserProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('user-status.historyDays','7',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.restapi.serviceLoggingEnabled','false',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.vcard.className','org.igniterealtime.openfire.plugin.avatarresizer.DelegateVCardProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('sasl.scram-sha-1.iteration-count','4096',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.presence.public','true',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.restapi.secret','fUzh1mfo4yVFjhct',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.auth.className','org.jivesoftware.openfire.auth.DefaultAuthProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('xmpp.domain','cfnmcp.cn',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.presence.unavailable.status','Unavailable',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('update.lastCheck','1554965612079',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.group.className','org.jivesoftware.openfire.group.DefaultGroupProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('xmpp.auth.anonymous','false',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.restapi.allowedIPs','',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('provider.lockout.className','org.jivesoftware.openfire.lockout.DefaultLockOutProvider',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('xmpp.session.conflict-limit','0',0,NULL);
INSERT INTO OFPROPERTY (`name`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('plugin.restapi.enabled','true',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('update.service-enabled','false',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('route.all-resources','true',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.LastActivityCache.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.offlinemessage.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.OfflineMessageSize.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.offlinePresence.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.OfflinePresenceCache.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.Roster.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.User.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.userCache.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.username2roster.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('cache.VCard.size','-1',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('update.notify-admins','false',0,NULL);
INSERT INTO OFPROPERTY (`NAME`,PROPVALUE,`ENCRYPTED`,IV) VALUES ('update.proxy.port','-1',0,NULL);

INSERT INTO OFPUBSUBAFFILIATION (SERVICEID,NODEID,JID,AFFILIATION) VALUES ('pubsub','','cfnmcp.cn','owner');

INSERT INTO OFPUBSUBDEFAULTCONF (SERVICEID,LEAF,DELIVERPAYLOADS,MAXPAYLOADSIZE,PERSISTITEMS,MAXITEMS,NOTIFYCONFIGCHANGES,NOTIFYDELETE,NOTIFYRETRACT,PRESENCEBASED,SENDITEMSUBSCRIBE,PUBLISHERMODEL,SUBSCRIPTIONENABLED,ACCESSMODEL,`LANGUAGE`,REPLYPOLICY,ASSOCIATIONPOLICY,MAXLEAFNODES) VALUES ('pubsub',1,1,5120,0,1,1,1,1,0,1,'publishers',1,'open','English',NULL,'all',-1);
INSERT INTO OFPUBSUBDEFAULTCONF (SERVICEID,LEAF,DELIVERPAYLOADS,MAXPAYLOADSIZE,PERSISTITEMS,MAXITEMS,NOTIFYCONFIGCHANGES,NOTIFYDELETE,NOTIFYRETRACT,PRESENCEBASED,SENDITEMSUBSCRIBE,PUBLISHERMODEL,SUBSCRIPTIONENABLED,ACCESSMODEL,`LANGUAGE`,REPLYPOLICY,ASSOCIATIONPOLICY,MAXLEAFNODES) VALUES ('pubsub',0,0,0,0,0,1,1,1,0,0,'publishers',1,'open','English',NULL,'all',-1);

INSERT INTO OFPUBSUBNODE (SERVICEID,NODEID,LEAF,CREATIONDATE,MODIFICATIONDATE,PARENT,DELIVERPAYLOADS,MAXPAYLOADSIZE,PERSISTITEMS,MAXITEMS,NOTIFYCONFIGCHANGES,NOTIFYDELETE,NOTIFYRETRACT,PRESENCEBASED,SENDITEMSUBSCRIBE,PUBLISHERMODEL,SUBSCRIPTIONENABLED,CONFIGSUBSCRIPTION,ACCESSMODEL,PAYLOADTYPE,BODYXSLT,DATAFORMXSLT,CREATOR,DESCRIPTION,`LANGUAGE`,`name`,REPLYPOLICY,ASSOCIATIONPOLICY,MAXLEAFNODES) VALUES ('pubsub','',0,'001554965573793','001554965573793',NULL,0,0,0,0,1,1,1,0,0,'publishers',1,0,'open','','','','cfnmcp.cn','','English','',NULL,'all',-1);

INSERT INTO OFUSERPROP (USERNAME,`name`,PROPVALUE) VALUES ('admin','console.rows_per_page','/session-summary.jsp=25');




